(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{1271:function(e,n,t){"use strict";t.r(n);var r=t(2),o=(t(27),t(21),t(25),t(91),t(13),t(1)),l=t(802),c={props:["blok"],data:function(){return{userLevelData:{level:0}}},fetch:function(){var e=this;return Object(r.a)(regeneratorRuntime.mark((function n(){var t,data;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!(e.blok.user_level.length>0)){n.next=6;break}return n.next=3,Object(l.b)(e.$store.state.auth.token);case 3:t=n.sent,data=t.data,e.userLevelData=Object(o.e)(data,"data.profile.userLevel",{level:0});case 6:case"end":return n.stop()}}),n)})))()},computed:{shouldBeVisible:function(){if(!this.$fetchState.pending&&null===this.$fetchState.error){var e=parseInt(this.userLevelData.level);return this.blok.user_level.map(Number).includes(e)}return!1}}},d=t(4),component=Object(d.a)(c,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{directives:[{name:"show",rawName:"v-show",value:e.shouldBeVisible,expression:"shouldBeVisible"}],class:e.blok.classes},e._l(e.blok.body,(function(e){return t(e.component,{key:e._uid,tag:"component",attrs:{id:e.id,blok:e}})})),1)}),[],!1,null,null,null);n.default=component.exports},802:function(e,n,t){"use strict";t.d(n,"b",(function(){return c})),t.d(n,"a",(function(){return d}));t(27),t(21),t(15),t(48),t(49),t(95);var r=t(47),o=t.n(r),l=t(80);function c(e){if(window&&window.location.toString().includes("localhost:6006")){var n=new URLSearchParams(window.location.search);return Promise.resolve({data:{data:{profile:{userLevel:{level:n.get("level")||4,name:"All Access Coaching"}},quests:[{id:"16",name:"10X",slug:"10x"}]}}})}return Object(l.b)(e).sendQuery("{ profile {\n    userLevel{\n        name\n        level\n      }\n    } \n  }")}function d(e,n){return o.a.post("https://connect-api.mindvalley.com/graphql",{operationName:"Discover",query:"query Discover($count:Int) {\n    discover {\n      code\n      title\n      events: allEvents(first: $count) {\n        edges {\n          node {\n            isFeature\n            currentUserStatus\n            id\n            title\n            acceptedUsersCount\n            acceptedUsers (first: 3) {\n              edges {\n                node {\n                  avatar\n                }\n              }\n            }\n            text\n            conferenceLink\n            startDate\n            endDate\n            public\n            timezoneId\n            images {\n              url\n            }\n          }\n        }\n      }\n    }\n  }",variables:{count:parseInt(e)}},{headers:{Authorization:"Bearer ".concat(n)},Accept:"application/json","Content-Type":"application/json"})}}}]);